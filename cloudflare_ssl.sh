#!/bin/bash

# –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_PATH=$(realpath "$0")

# –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'rm -f "$SCRIPT_PATH"' EXIT

# –¶–≤–µ—Ç–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
green='\033[0;32m'
red='\033[0;31m'
yellow='\033[0;33m'
plain='\033[0m'

LOGI() { echo -e "‚úÖ ${green}$* ${plain}"; }
LOGE() { echo -e "‚ùå ${red}$* ${plain}"; }
LOGD() { echo -e "‚ö° ${yellow}$* ${plain}"; }

install_acme() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ curl
    if ! command -v curl &>/dev/null; then
        LOGD "curl –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º curl ..."
        if [[ "$(command -v apt-get)" ]]; then
            sudo apt-get update
            sudo apt-get install -y curl
        elif [[ "$(command -v yum)" ]]; then
            sudo yum install -y curl
        elif [[ "$(command -v dnf)" ]]; then
            sudo dnf install -y curl
        elif [[ "$(command -v pacman)" ]]; then
            sudo pacman -S --noconfirm curl
        else
            LOGE "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å curl: –Ω–µ –Ω–∞–π–¥–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ ‚ùå"
            return 1
        fi
        if [[ $? -ne 0 ]]; then
            LOGE "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ curl ‚ùå"
            return 1
        fi
        LOGI "curl —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ acme.sh
    if command -v ~/.acme.sh/acme.sh &>/dev/null; then
        LOGI "acme.sh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω üöÄ"
        return 0
    fi

    LOGI "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º acme.sh üì•..."
    curl -s https://get.acme.sh | sh
    if [[ $? -ne 0 ]]; then
        LOGE "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ acme.sh ‚ùå"
        return 1
    fi
    LOGI "acme.sh —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚úÖ"
    return 0
}

ssl_cert_issue_CF() {
    install_acme || { LOGE "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å acme.sh ‚ùå"; exit 1; }
    echo ""
    read -p "üåç –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω: " CF_Domain
    echo -e "üîë –í–≤–µ–¥–∏—Ç–µ Cloudflare Global API Key: "
    echo -e "   –ï–≥–æ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ: \e[33mhttps://dash.cloudflare.com/profile/api-tokens\e[0m"
    echo -ne "\033[2A\033[38C"  
    read -r CF_GlobalKey
    echo ""    
    read -p "üìß –í–≤–µ–¥–∏—Ç–µ email: " CF_AccountEmail

    export CF_Key="${CF_GlobalKey}"
    export CF_Email="${CF_AccountEmail}"

    LOGI "–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è ${CF_Domain} üîÑ..."
    ~/.acme.sh/acme.sh --set-default-ca --server letsencrypt
    ~/.acme.sh/acme.sh --issue --dns dns_cf -d "${CF_Domain}" -d "*.${CF_Domain}" --log || {
        LOGE "–û—à–∏–±–∫–∞ –≤—ã–ø—É—Å–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ‚ùå"; exit 1;
    }

    LOGI "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ üîÑ..."
    ~/.acme.sh/acme.sh --upgrade --auto-upgrade || {
        LOGE "–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ‚ùå"; exit 1;
    }

    CERT_DIR="/root/my_cert/${CF_Domain}"
    mkdir -p "${CERT_DIR}"

    LOGI "–ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ ${CERT_DIR} üìÇ..."
    ~/.acme.sh/acme.sh --install-cert -d "${CF_Domain}" \
        --cert-file "${CERT_DIR}/cert.pem" \
        --key-file "${CERT_DIR}/private.key" \
        --fullchain-file "${CERT_DIR}/fullchain.pem" \
        --ca-file "${CERT_DIR}/ca.pem"

    echo -e "\nüéâ ${green}–§–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫—É: ${CERT_DIR}${plain}"
    echo "üìÇ –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:"
    find "${CERT_DIR}" -type f | while read file; do
        echo -e "   üìÑ ${file}"
    done
}

remove_acme() {
    LOGI "–ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ acme.sh..."

    if [ -d "$HOME/.acme.sh" ]; then
        # –£–¥–∞–ª—è–µ–º acme.sh —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã --uninstall
        ~/.acme.sh/acme.sh --uninstall
        if [[ $? -eq 0 ]]; then
            LOGI "acme.sh –∏ –∑–∞–¥–∞—á–∞ cron —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
        else
            LOGE "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è acme.sh ‚ùå"
        fi
    else
        LOGI "acme.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∏—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ üü¢"
    fi


    if [ -d "/root/my_cert" ]; then
        rm -rf "/root/my_cert"
        LOGI "–£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: /root/my_cert ‚úÖ"
    else
        LOGI "–ü–∞–ø–∫–∞ /root/my_cert –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º üü¢"
    fi

    LOGI "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚úÖ"
}

show_cert_path() {
    if [[ ! -d "/root/my_cert" ]]; then
        echo -e "‚ùå –û—à–∏–±–∫–∞: –ø–∞–ø–∫–∞ /root/my_cert/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        return
    fi

    echo -e "üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:"
    find "/root/my_cert" -type f | while read file; do
        echo -e "   üìÑ ${file}"
    done
}

install_cert_xui() {
    read -p "üåç –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ X-UI: " CF_Domain
    CERT_DIR="/root/my_cert/${CF_Domain}"

    if [[ ! -f "${CERT_DIR}/fullchain.pem" || ! -f "${CERT_DIR}/private.key" ]]; then
        LOGE "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${CERT_DIR}, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø—É—Å—Ç–∏—Ç–µ –∏—Ö! ‚ùå"
        return
    fi

    LOGI "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ 3X-UI üîß..."
    /usr/local/x-ui/x-ui cert -webCert "${CERT_DIR}/fullchain.pem" -webCertKey "${CERT_DIR}/private.key"

    systemctl restart x-ui
    LOGI "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 3X-UI –∏ –ø–∞–Ω–µ–ª—å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!"
}

install_cert_nextcloud() {
    read -p "üåç –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ Nextcloud: " CF_Domain
    CERT_DIR="/root/my_cert/${CF_Domain}"
    NEXTCLOUD_CERT_DIR="/var/snap/nextcloud/current/certs/custom/"

    if [[ ! -f "${CERT_DIR}/cert.pem" || ! -f "${CERT_DIR}/private.key" || ! -f "${CERT_DIR}/fullchain.pem" ]]; then
        LOGE "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${CERT_DIR}, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø—É—Å—Ç–∏—Ç–µ –∏—Ö! ‚ùå"
        return
    fi

    LOGI "–ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ Nextcloud üìÇ..."
    ~/.acme.sh/acme.sh --install-cert -d "${CF_Domain}" \
        --cert-file "${NEXTCLOUD_CERT_DIR}/cert.pem" \
        --key-file "${NEXTCLOUD_CERT_DIR}/private.key" \
        --fullchain-file "${NEXTCLOUD_CERT_DIR}/fullchain.pem"

    LOGI "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ Nextcloud üîß..."
    cd "${NEXTCLOUD_CERT_DIR}" || { LOGE "–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ ${NEXTCLOUD_CERT_DIR}"; return; }
    nextcloud.enable-https custom ./cert.pem ./private.key ./fullchain.pem

    LOGI "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nextcloud üîß..."
    snap restart nextcloud
    
    LOGI "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Nextcloud –∏ –ø–∞–Ω–µ–ª—å –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞! ‚úÖ"
}

install_cert_adguard() {
    read -p "üåç –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ AdGuard Home: " CF_Domain
    CERT_DIR="/root/my_cert/${CF_Domain}"
    ADGUARD_CERT_DIR="/var/snap/adguard-home/common/certs/"

    LOGI " –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç üìÇ..."
    if [[ ! -d "${ADGUARD_CERT_DIR}" ]]; then
        LOGI "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${ADGUARD_CERT_DIR} ..."
        sudo mkdir -p "${ADGUARD_CERT_DIR}"
        if [[ $? -ne 0 ]]; then
            LOGE "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${ADGUARD_CERT_DIR} ‚ùå"
            return 1
        fi
    else
        LOGI "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${ADGUARD_CERT_DIR} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üü¢"
    fi
    
    if [[ ! -f "${CERT_DIR}/fullchain.pem" || ! -f "${CERT_DIR}/private.key" ]]; then
        LOGE "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${CERT_DIR}, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø—É—Å—Ç–∏—Ç–µ –∏—Ö! ‚ùå"
        return
    fi

    LOGI "–ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ AdGuard Home üìÇ..."
    ~/.acme.sh/acme.sh --install-cert -d "${CF_Domain}" \
        --key-file "${ADGUARD_CERT_DIR}/private.key" \
        --fullchain-file "${ADGUARD_CERT_DIR}/fullchain.pem"

    LOGI "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é AdGuard Home üîß..."
    sed -i "/^tls:/,/^[^ ]/ { s|enabled: false|enabled: true|; }" /var/snap/adguard-home/current/AdGuardHome.yaml
    sed -i "/^tls:/,/^[^ ]/ { s|server_name:.*|server_name: ${CF_Domain}|; }" /var/snap/adguard-home/current/AdGuardHome.yaml
    sed -i "/^tls:/,/^[^ ]/ { s|certificate_path:.*|certificate_path: \"/var/snap/adguard-home/common/certs/fullchain.pem\"|; }" /var/snap/adguard-home/current/AdGuardHome.yaml
    sed -i "/^tls:/,/^[^ ]/ { s|private_key_path:.*|private_key_path: \"/var/snap/adguard-home/common/certs/private.key\"|; }" /var/snap/adguard-home/current/AdGuardHome.yaml

    LOGI "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ 443üö¶..."
    if netstat -tuln | grep -q ":443 "; then
        read -p "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç 443 –∑–∞–Ω—è—Ç. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç https –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ AdGuard: " HTTPS_PORT
        if [[ -n "$HTTPS_PORT" ]]; then
            sed -i "/^tls:/,/^[^ ]/ { s|port_https:.*|port_https: ${HTTPS_PORT}|; }" /var/snap/adguard-home/current/AdGuardHome.yaml
            LOGI "–¢–µ–ø–µ—Ä—å –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ AdGuard –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ—Ä—Ç ${HTTPS_PORT} ."
        else
            LOGE "–ü–æ—Ä—Ç –Ω–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç 443."
        fi
    fi

    LOGI "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º AdGuard Home üîÑ..."
    snap restart adguard-home

    LOGI "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ AdGuard Home –∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ! ‚úÖ"
}


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
echo "================================"
echo "üõ°Ô∏è  Cloudflare SSL Certificate üîë"
echo "================================"
echo -e "1Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å acme –∏ –≤—ã–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º üîê"
echo -e "2Ô∏è‚É£  –£–¥–∞–ª–∏—Ç—å acme.sh, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –ø–∞–ø–∫—É my cert üóëÔ∏è"
echo -e "3Ô∏è‚É£  –ü–æ–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ üìÑ"
echo -e "4Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ 3X-UI üîß"
echo -e "5Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ Nextcloud üîß"
echo -e "6Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ AdGuard Home üîß"
echo -e "0Ô∏è‚É£  –í—ã–π—Ç–∏ ‚ùå"
echo "================================"
read -p "üìå –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (0-5): " choice

case "$choice" in
    1) ssl_cert_issue_CF ;;
    2) remove_acme ;;
    3) show_cert_path ;;
    4) install_cert_xui ;;
    5) install_cert_nextcloud ;;
    6) install_cert_adguard ;;
    0) echo -e "üëã ${green}–í—ã—Ö–æ–¥...${plain}"; exit 0 ;;
    *) echo -e "‚ö†Ô∏è ${red}–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 0-5.${plain}" ;;
esac
