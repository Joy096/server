#!/bin/bash

# –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_PATH=$(realpath "$0")

# –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'rm -f "$SCRIPT_PATH"' EXIT

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
JACKETT_INSTALL_DIR="/opt" # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Jackett
JACKETT_APP_DIR_PATTERN="Jackett" # –®–∞–±–ª–æ–Ω –∏–º–µ–Ω–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ /opt
JACKETT_CONFIG_DIR="/home/ubuntu/.config/Jackett" # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Jackett (–∏–∑ –ª–æ–≥–æ–≤)
JACKETT_SERVICE_NAME="jackett.service" # –ò–º—è systemd —Å–µ—Ä–≤–∏—Å–∞
JACKETT_DEFAULT_PORT="9117" # –ü–æ—Ä—Ç Jackett –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
UFW_RULE_COMMENT="Jackett Access" # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–∞–≤–∏–ª–∞ UFW

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Ä—Ç–∞
JACKETT_PORT=$JACKETT_DEFAULT_PORT

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç root ---
if [[ $EUID -ne 0 ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –æ—Ç root!"
    echo "‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ root ('su -' –∏–ª–∏ 'sudo -i') –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–Ω–æ–≤–æ." # –û—Å—Ç–∞–≤–ª—è–µ–º ‚ÑπÔ∏è –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    exit 1
fi

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
is_port_available() {
    local port_to_check="$1"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–ª—É—à–∞–µ—Ç—Å—è –ª–∏ –ø–æ—Ä—Ç –ø–æ TCP
    if ss -tlpn | grep -q ":${port_to_check}\\s"; then
        return 1 # –ü–æ—Ä—Ç –∑–∞–Ω—è—Ç
    else
        return 0 # –ü–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
    fi
}

# –ó–∞–ø—Ä–æ—Å –ø–æ—Ä—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ask_for_port() {
    local current_port=$1
    echo "‚ö†Ô∏è –ü–æ—Ä—Ç ${current_port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è."
    while true; do
        read -p "–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –¥–ª—è Jackett (1-65535): " input_port # –£–±—Ä–∞–ª–∏ ‚ùì
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞
        if ! [[ "$input_port" =~ ^[0-9]+$ ]]; then
            echo "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞ (—á–∏—Å–ª–æ)."
            continue
        fi
        if [[ "$input_port" -lt 1 || "$input_port" -gt 65535 ]]; then
            echo "‚ùå –û—à–∏–±–∫–∞: –ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1-65535."
            continue
        fi
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        if is_port_available "$input_port"; then
            JACKETT_PORT=$input_port # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
            echo "‚úÖ –ü–æ—Ä—Ç ${JACKETT_PORT} –≤—ã–±—Ä–∞–Ω –∏ —Å–≤–æ–±–æ–¥–µ–Ω."
            break # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, –ø–æ—Ä—Ç –Ω–∞–π–¥–µ–Ω
        else
            echo "‚ö†Ô∏è –ü–æ—Ä—Ç ${input_port} —Ç–∞–∫–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π."
        fi
    done
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ IP
get_public_ip() {
    local ip
    # –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    ip=$(curl -s -m 5 ifconfig.me || curl -s -m 5 api.ipify.org || curl -s -m 5 icanhazip.com || echo "")
    echo "$ip"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (wget, tar, jq)..." # –£–±—Ä–∞–ª–∏ üîÑ
    export DEBIAN_FRONTEND=noninteractive
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
    if ! apt-get update -qq > /dev/null; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤."
        return 1
    fi
    local packages_to_install=""
    for pkg in wget tar jq; do
        if ! dpkg -s $pkg &> /dev/null; then
            packages_to_install+="$pkg "
        fi
    done
    if [[ -n "$packages_to_install" ]]; then
        if ! apt-get install -y $packages_to_install > /dev/null; then
            echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: $packages_to_install"
            return 1
        fi
    fi
    return 0
}

# –ù–∞–π—Ç–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Jackett
find_jackett_app_dir() {
    find "${JACKETT_INSTALL_DIR}" -maxdepth 1 -type d -name "${JACKETT_APP_DIR_PATTERN}*" -print -quit
}

# --- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Jackett
install_jackett() {
    local install_dir_exists
    install_dir_exists=$(find_jackett_app_dir)
    JACKETT_PORT=$JACKETT_DEFAULT_PORT # –°–±—Ä–æ—Å –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É –ø–æ—Ä—Ç—É

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–¥–∞–ª–µ–Ω–∏–µ
    if [[ -d "$JACKETT_CONFIG_DIR" || -n "$install_dir_exists" ]]; then
        read -p "Jackett —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? (y/N): " confirm # –£–±—Ä–∞–ª–∏ ‚ùì
        if [[ ! "$confirm" =~ ^[Yy–î–¥]$ ]]; then
            echo "–û—Ç–º–µ–Ω–∞." # –£–±—Ä–∞–ª–∏ üö´
            return 1
        fi
        echo "–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..." # –£–±—Ä–∞–ª–∏ üîÑ
        local old_port=$JACKETT_DEFAULT_PORT
        if [[ -f "${JACKETT_CONFIG_DIR}/ServerConfig.json" ]]; then
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Ä—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∏–ª–∏ –Ω–µ —á–∏—Å–ª–æ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç
            old_port=$(jq -r '.Port // empty' "${JACKETT_CONFIG_DIR}/ServerConfig.json" 2>/dev/null) || old_port=$JACKETT_DEFAULT_PORT
            [[ "$old_port" =~ ^[0-9]+$ ]] || old_port=$JACKETT_DEFAULT_PORT
        fi
        # –í—ã–∑—ã–≤–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è
        if ! remove_jackett_internal "skip_confirmation" "$old_port"; then
            echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞."
            return 1
        fi
        echo "‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –≤–µ—Ä—Å–∏—è —É–¥–∞–ª–µ–Ω–∞."
    fi

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–±–æ—Ä –ø–æ—Ä—Ç–∞
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞ ${JACKETT_PORT}..." # –£–±—Ä–∞–ª–∏ üö¶
    if ! is_port_available "$JACKETT_PORT"; then
        ask_for_port "$JACKETT_PORT" # –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ—Ä—Ç
    fi

    # 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if ! install_dependencies; then
        return 1
    fi

    # 4. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –≤–µ—Ä—Å–∏–∏
    local ARCH
    ARCH=$(dpkg --print-architecture)
    local JACKETT_FILENAME=""
    local INSTALL_CMD=""
    case "$ARCH" in
        arm64) JACKETT_FILENAME="Jackett.Binaries.LinuxARM64.tar.gz" ;;
        amd64) JACKETT_FILENAME="Jackett.Binaries.LinuxAMDx64.tar.gz" ;;
        *) echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ${ARCH}."
           return 1 ;;
    esac

    echo "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Jackett..." # –£–±—Ä–∞–ª–∏ üîÑ
    local RELEASE_TAG
    RELEASE_TAG=$(wget -q https://github.com/Jackett/Jackett/releases/latest -O - | grep 'title>Release' | cut -d ' ' -f 4)
    if [ -z "$RELEASE_TAG" ]; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é Jackett."
        return 1
    fi
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É wget —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL
    local DOWNLOAD_URL="https://github.com/Jackett/Jackett/releases/download/${RELEASE_TAG}/${JACKETT_FILENAME}"
    echo "–ó–∞–≥—Ä—É–∑–∫–∞ ${DOWNLOAD_URL}..." # –£–±—Ä–∞–ª–∏ üì•

    if ! wget --quiet --show-progress -O "/tmp/${JACKETT_FILENAME}" "${DOWNLOAD_URL}"; then
         echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Jackett."
         rm -f "/tmp/${JACKETT_FILENAME}" # –£–¥–∞–ª—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
         return 1
    fi

    # 5. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞
    echo "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Jackett –≤ ${JACKETT_INSTALL_DIR}..." # –£–±—Ä–∞–ª–∏ üì¶
    if ! tar -xzf "/tmp/${JACKETT_FILENAME}" -C "${JACKETT_INSTALL_DIR}"; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –∞—Ä—Ö–∏–≤ Jackett."
        rm -f "/tmp/${JACKETT_FILENAME}"
        # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
        rm -rf $(find ${JACKETT_INSTALL_DIR} -maxdepth 1 -type d -name "Jackett*" -print -quit)
        return 1
    fi
    rm -f "/tmp/${JACKETT_FILENAME}" # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∏–º—è —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    local actual_install_dir
    actual_install_dir=$(find_jackett_app_dir)
    if [[ -z "$actual_install_dir" ]]; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é Jackett –ø–æ—Å–ª–µ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏."
        return 1
    fi

    # 6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤
    chown -R ubuntu:ubuntu "$actual_install_dir" # –ü—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ubuntu, –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    chmod +x "${actual_install_dir}/jackett"

    # 7. –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
    echo "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ (${JACKETT_SERVICE_NAME})..." # –£–±—Ä–∞–ª–∏ ‚öôÔ∏è
    cat << EOF > /etc/systemd/system/${JACKETT_SERVICE_NAME}
[Unit]
Description=Jackett Daemon
After=network.target

[Service]
User=ubuntu # –ü—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ubuntu
Group=ubuntu # –ü—Ä–∏–º–µ—Ä –≥—Ä—É–ø–ø—ã ubuntu
WorkingDirectory=${actual_install_dir}
ExecStart=${actual_install_dir}/jackett --NoRestart --Port ${JACKETT_PORT} # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç
Restart=always
RestartSec=5
Environment=DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

[Install]
WantedBy=multi-user.target
EOF

    # 8. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    echo "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd..." # –£–±—Ä–∞–ª–∏ üîÑ
    systemctl daemon-reload
    echo "–ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ ${JACKETT_SERVICE_NAME}..." # –£–±—Ä–∞–ª–∏ ‚ñ∂Ô∏è
    if ! systemctl enable ${JACKETT_SERVICE_NAME} --now; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å Jackett."
        echo " –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏: journalctl -u ${JACKETT_SERVICE_NAME}"
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        rm -f /etc/systemd/system/${JACKETT_SERVICE_NAME}
        systemctl daemon-reload
        return 1
    fi

    # 9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UFW –¥–ª—è –ø–æ—Ä—Ç–∞ ${JACKETT_PORT}..." # –£–±—Ä–∞–ª–∏ üî•
    if command -v ufw &> /dev/null; then
        ufw allow proto tcp to any port ${JACKETT_PORT} comment "${UFW_RULE_COMMENT}"
        echo "UFW: –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ ${JACKETT_PORT}."
    else
        echo "‚ö†Ô∏è UFW –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ ${JACKETT_PORT} –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ."
    fi

    # 10. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    echo ""
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Jackett –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    show_address_internal $JACKETT_PORT
    echo "‚ÑπÔ∏è –õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: journalctl -u ${JACKETT_SERVICE_NAME}"
    echo "‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: ${JACKETT_CONFIG_DIR}"
    echo "‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–æ–∫—Å–∏ –∏–ª–∏ Docker, –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞."
    echo "‚ÑπÔ∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
    echo "‚ÑπÔ∏è –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
    return 0
}

# –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è Jackett
remove_jackett_internal() {
    local skip_confirmation=$1
    local port_to_remove=$2
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    [[ -z "$port_to_remove" ]] && port_to_remove=$JACKETT_DEFAULT_PORT
    [[ "$port_to_remove" =~ ^[0-9]+$ ]] || port_to_remove=$JACKETT_DEFAULT_PORT

    local install_dir_to_remove
    install_dir_to_remove=$(find_jackett_app_dir)
    local config_dir_actual="${JACKETT_CONFIG_DIR}"

    # –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ
    if [[ "$skip_confirmation" != "skip_confirmation" ]]; then
        echo ""
        echo "–£–¥–∞–ª–µ–Ω–∏–µ Jackett" # –£–±—Ä–∞–ª–∏ üóëÔ∏è
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —á—Ç–æ —É–¥–∞–ª—è—Ç—å
        if [[ ! -d "$config_dir_actual" && -z "$install_dir_to_remove" ]]; then
            echo "‚ÑπÔ∏è Jackett –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å."
            return 0
        fi
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if [[ -f "$config_dir_actual/ServerConfig.json" ]]; then
             current_port_in_config=$(jq -r '.Port // empty' "$config_dir_actual/ServerConfig.json" 2>/dev/null) || current_port_in_config=$JACKETT_DEFAULT_PORT
             [[ "$current_port_in_config" =~ ^[0-9]+$ ]] || current_port_in_config=$JACKETT_DEFAULT_PORT
             port_to_remove=$current_port_in_config # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç –¥–ª—è UFW
        fi

        read -p "–£–¥–∞–ª–∏—Ç—å Jackett (–∫–æ–Ω—Ñ–∏–≥: ${config_dir_actual}, –ø–æ—Ä—Ç ${port_to_remove})? (y/N): " confirmation # –£–±—Ä–∞–ª–∏ ‚ùì
        if [[ ! "$confirmation" =~ ^[Yy–î–¥]$ ]]; then
            echo "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ." # –£–±—Ä–∞–ª–∏ üö´
            return 1
        fi
    fi

    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ ${JACKETT_SERVICE_NAME}..." # –£–±—Ä–∞–ª–∏ ‚è≥
    systemctl disable ${JACKETT_SERVICE_NAME} --now &> /dev/null
    # –§–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–∞–∫ —á—Ç–æ —É–¥–∞–ª—è—Ç—å –µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ
    # echo "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–µ—Ä–≤–∏—Å–∞..." # –£–±—Ä–∞–ª–∏ üóëÔ∏è
    # rm -f /etc/systemd/system/${JACKETT_SERVICE_NAME}
    echo "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ systemd..." # –£–±—Ä–∞–ª–∏ üîÑ
    systemctl daemon-reload
    systemctl reset-failed # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è failed —é–Ω–∏—Ç–æ–≤

    echo "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (${config_dir_actual})..." # –£–±—Ä–∞–ª–∏ üóëÔ∏è
    rm -rf "${config_dir_actual}"

    if [[ -n "$install_dir_to_remove" && -d "$install_dir_to_remove" ]]; then
        echo "–£–¥–∞–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${install_dir_to_remove}..." # –£–±—Ä–∞–ª–∏ üóëÔ∏è
        rm -rf "$install_dir_to_remove"
    else
        echo "‚ÑπÔ∏è –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è Jackett –≤ ${JACKETT_INSTALL_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
    fi

    echo "UFW: –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–∞ ${port_to_remove}..." # –£–±—Ä–∞–ª–∏ üî•
    if command -v ufw &> /dev/null; then
        ufw delete allow proto tcp to any port ${port_to_remove} comment "${UFW_RULE_COMMENT}" &> /dev/null || echo "‚ÑπÔ∏è UFW: –ü—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å."
    fi

    echo ""
    echo "‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ Jackett –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è Jackett (–ø—É–±–ª–∏—á–Ω–∞—è)
remove_jackett() {
    echo ""
    local current_port=$JACKETT_DEFAULT_PORT
    local config_path="${JACKETT_CONFIG_DIR}/ServerConfig.json"
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
    if [[ -f "$config_path" ]]; then
        current_port=$(jq -r '.Port // empty' "$config_path" 2>/dev/null) || current_port=$JACKETT_DEFAULT_PORT
        [[ "$current_port" =~ ^[0-9]+$ ]] || current_port=$JACKETT_DEFAULT_PORT
    fi

    if ! remove_jackett_internal "skip_confirmation" "$current_port"; then
       echo "‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è."
       return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∞–¥—Ä–µ—Å–∞ (–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è)
show_address_internal() {
    local port_to_show=$1
    local public_ip
    public_ip=$(get_public_ip)
    if [[ -z "$public_ip" ]]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞. –ù–µ –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É."
    else
        echo "–ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: http://${public_ip}:${port_to_show}" # –£–±—Ä–∞–ª–∏ üåç
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∞–¥—Ä–µ—Å–∞ (–ø—É–±–ª–∏—á–Ω–∞—è)
show_address() {
    echo ""
    local current_port=$JACKETT_DEFAULT_PORT
    local config_path="${JACKETT_CONFIG_DIR}/ServerConfig.json"
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    if [[ -f "$config_path" ]]; then
        current_port=$(jq -r '.Port // empty' "$config_path" 2>/dev/null) || current_port=$JACKETT_DEFAULT_PORT
        [[ "$current_port" =~ ^[0-9]+$ ]] || current_port=$JACKETT_DEFAULT_PORT
    fi

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º systemctl status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if systemctl status ${JACKETT_SERVICE_NAME} &> /dev/null; then
        show_address_internal "$current_port"
    else
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–≤–µ—Å—Ç–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å —Å–∏—Å—Ç–µ–º–µ
        if systemctl list-units --full -all | grep -q "${JACKETT_SERVICE_NAME}"; then
           echo "‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å Jackett —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ —Å–µ–π—á–∞—Å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ê–¥—Ä–µ—Å –ø–æ–∫–∞–∑–∞—Ç—å –Ω–µ –º–æ–≥—É."
           echo " –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: systemctl start ${JACKETT_SERVICE_NAME}"
        else
           echo "‚ÑπÔ∏è Jackett –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω."
        fi
    fi
}

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —Å–∫—Ä–∏–ø—Ç–∞ (–ú–µ–Ω—é) ---
while true; do
    echo ""
    echo "======== –ú–µ–Ω—é Jackett ========" # –£–±—Ä–∞–ª–∏ üé¨
    echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å / –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Jackett" # –£–±—Ä–∞–ª–∏ 1Ô∏è‚É£
    echo "2. –£–¥–∞–ª–∏—Ç—å Jackett" # –£–±—Ä–∞–ª–∏ 2Ô∏è‚É£
    echo "3. –ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ Jackett" # –£–±—Ä–∞–ª–∏ 3Ô∏è‚É£
    echo "0. –í—ã—Ö–æ–¥" # –£–±—Ä–∞–ª–∏ 0Ô∏è‚É£ üëã
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (0-3): " choice # –£–±—Ä–∞–ª–∏ üëâ
    case $choice in
        1) install_jackett ;;
        2) remove_jackett ;;
        3) show_address ;;
        0) echo "–í—ã—Ö–æ–¥." echo "" exit 0 ;; # –£–±—Ä–∞–ª–∏ üëã
        *) echo "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." ;;
    esac
    echo "" # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ—Ç–¥–µ–ª–µ–Ω–∏—è –æ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ–Ω—é
done
