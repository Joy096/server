#!/bin/bash

# –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ —Å–∫—Ä–∏–ø—Ç—É
SCRIPT_PATH=$(realpath "$0")

# –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap 'rm -f "$SCRIPT_PATH"' EXIT

if [[ $EUID -ne 0 ]]; then
    echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –æ—Ç root!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ TorrServer
install_torrserver() {
  echo ""
  echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
  export DEBIAN_FRONTEND=noninteractive
  apt update && apt full-upgrade -y && apt autoremove -y && apt clean

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ jq
    if ! command -v jq &>/dev/null; then
    echo " –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º jq..."
    apt install -y jq
  fi

		# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl
			if ! command -v curl &>/dev/null; then
					echo "‚ö†Ô∏è –£—Ç–∏–ª–∏—Ç–∞ curl –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
					apt update &&  apt install -y curl
					if ! command -v curl &>/dev/null; then
							echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å curl. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
							exit 1
					fi
			fi

  echo ""
  echo " –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TorrServer..."
  bash <(curl -Ls https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerLinux.sh)

  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
   web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
	  
			if [[ -z "$web_port" ]]; then
     web_port="8090"
     echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—Ä—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $web_port"
   else
     echo "‚úÖ –û–ø—Ä–µ–¥–µ–ª—ë–Ω –ø–æ—Ä—Ç: $web_port"
   fi

  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –≤ —Ñ–∞–π–ª –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
  echo "$web_port" | tee /opt/torrserver/port.conf >/dev/null

  echo " –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–∞..."
    if command -v ufw &>/dev/null; then
    ufw allow "$web_port"
    echo "‚úÖ –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ—Ä—Ç–∞ $web_port."
  else
    echo "‚ö†Ô∏è –£—Ç–∏–ª–∏—Ç–∞ ufw –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä –≤—Ä—É—á–Ω—É—é –¥–ª—è –ø–æ—Ä—Ç–∞ $web_port."
  fi

  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  (crontab -l 2>/dev/null; echo "30 4 * * * bash <(curl -Ls https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerLinux.sh) --update > torrserver_update.log 2>&1") | crontab -
  echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª torrserver_update.log –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."

 # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  settings_file="/opt/torrserver/settings.json"

  if [[ -f "$settings_file" ]]; then
    tmp_file=$(mktemp)

    jq '
      .BitTorr.CacheSize = 10485760000 |
      .BitTorr.ReaderReadAHead = 95 |
      .BitTorr.PreloadCache = 0 |
      .BitTorr.RemoveCacheOnDrop = true |
      .BitTorr.UseDisk = true |
      .BitTorr.TorrentsSavePath = "/opt/torrserver/cache" |
      .BitTorr.DisableUTP = false |
      .BitTorr.EnableRutorSearch = true
    ' "$settings_file" > "$tmp_file" &&  mv "$tmp_file" "$settings_file"

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ñ–∞–π–ª–∞ settings.json
     chown torrserver:torrserver "$settings_file"
     chmod 644 "$settings_file"

    echo "‚úÖ –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ TorrServer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."
    echo "‚úÖ –ü—É—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ—à–∞: /opt/torrserver/cache"
    echo "üåç –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: http://$(curl -s ifconfig.me):$web_port"

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ TorrServer –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
     systemctl restart torrserver
  else
    echo "‚ö†Ô∏è –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É TorrServer."
  fi
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è TorrServer
uninstall_torrserver() {
  echo ""
  echo "üöÄ –£–¥–∞–ª–µ–Ω–∏–µ TorrServer..."

  web_port=$(cat /opt/torrserver/port.conf 2>/dev/null)

  if [[ -z "$web_port" ]]; then
    web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
  fi

  if [[ -z "$web_port" ]]; then
    web_port="8090"
  fi

  echo " –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è TorrServer..."
   bash <(curl -Ls https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerLinux.sh) --remove

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ UFW
  if command -v ufw &>/dev/null; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ UFW
    if ufw status | grep -q "Status: active"; then
      if ufw status | grep -q "$web_port"; then
        ufw delete allow "$web_port" 2>/dev/null
        echo "‚úÖ –ü–æ—Ä—Ç $web_port –∑–∞–∫—Ä—ã—Ç."
      else
        echo "‚ÑπÔ∏è –ü–æ—Ä—Ç $web_port –Ω–µ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä–µ."
      fi
    else
      echo "‚ÑπÔ∏è UFW –æ—Ç–∫–ª—é—á—ë–Ω, –ø–æ—Ä—Ç—ã –Ω–µ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è."
    fi
  else
    echo "‚ÑπÔ∏è UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–¥–∞–ª–∏—Ç–µ –ø–æ—Ä—Ç—ã –≤—Ä—É—á–Ω—É—é."
  fi

  # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ crontab
  crontab -l | grep -v "bash <(curl -Ls https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerLinux.sh) --update > torrserver_update.log" | crontab -
  echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ."

  # –£–¥–∞–ª–µ–Ω–∏–µ —Ö–≤–æ—Å—Ç–æ–≤
  rm -rf torrserver_update.sh torrserver_update.log /opt/torrserver/port.conf 2>/dev/null
  echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
}

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
manage_auth() {
		local accs_db="/opt/torrserver/accs.db"
		[[ ! -f "$accs_db" ]] && echo "{}" |  tee "$accs_db" >/dev/null

		while true; do
				echo ""
				echo " üîê –ú–µ–Ω—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:"
				echo "1Ô∏è‚É£  –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
				echo "2Ô∏è‚É£  –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
				echo "3Ô∏è‚É£  –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
				echo "4Ô∏è‚É£  –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
				echo "0Ô∏è‚É£  –ù–∞–∑–∞–¥"
				echo "=============================="
				read -p " –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (0-4): " auth_choice

				case $auth_choice in
						1) add_user ;;
						2) remove_user ;;
						3) list_users ;;
						4) disable_auth ;;
						0) return ;;
						*) echo "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." ;;
				esac
		done
}

# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
add_user() {
  local accs_db="/opt/torrserver/accs.db"
  local port_file="/opt/torrserver/port.conf"

  [[ ! -f "$accs_db" ]] && echo "{}" |  tee "$accs_db" >/dev/null

  read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " answer_user
  read -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: " answer_pass

  if jq -e --arg user "$answer_user" '.[$user] != null' "$accs_db" >/dev/null; then
    auth_pass=$(jq -r --arg user "$answer_user" '.[$user]' "$accs_db")
    echo "–¢–∞–∫–æ–µ –∏–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: $answer_user:$auth_pass"
  else
    tmp_file=$(mktemp)
    jq --arg user "$answer_user" --arg pass "$answer_pass" '. + {($user): $pass}' "$accs_db" > "$tmp_file" &&  mv "$tmp_file" "$accs_db"
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $answer_user –¥–æ–±–∞–≤–ª–µ–Ω."
  fi

  # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ torrserver.config —á—Ç–æ–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–ª–∞
  web_port=$(cat /opt/torrserver/port.conf 2>/dev/null)

  if [[ -z "$web_port" ]]; then
    web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
  fi

  if [[ -z "$web_port" ]]; then
    web_port="8090"
  fi

    cat << EOF |  tee /opt/torrserver/torrserver.config >/dev/null
DAEMON_OPTIONS="--port $web_port --path /opt/torrserver --httpauth"
EOF
		
		# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ñ–∞–π–ª–∞ accs_db —á—Ç–æ–±—ã torrserver –º–æ–≥ —Å—á–∏—Ç—ã–≤–∞—Ç—å –∏—Ö
		 chown torrserver:torrserver "$accs_db"
		 chmod 644 "$accs_db"

  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
   systemctl restart torrserver
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
remove_user() {
  local accs_db="/opt/torrserver/accs.db"
  local port_file="/opt/torrserver/port.conf"

  # ANSI-–∫–æ–¥—ã –¥–ª—è —Ü–≤–µ—Ç–∞
  RED='\033[1;31m'  # –ö—Ä–∞—Å–Ω—ã–π
  NC='\033[0m'      # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
  if [[ ! -f "$accs_db" || "$(jq 'keys | length' "$accs_db")" -eq 0 ]]; then
    echo "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    return
  fi

  echo "üìú –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
  local users
  users=($(jq -r 'keys[]' "$accs_db"))  # –ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

  # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–º–µ—Ä–∞–º–∏
  for i in "${!users[@]}"; do
    echo -e "${RED}$((i + 1)).${NC} ${users[i]}"
  done

  # –ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  echo -en "\nüìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "
  read -r num

  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–º
  if ! [[ "$num" =~ ^[0-9]+$ ]]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä!"
    return
  fi

  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –∏–Ω–¥–µ–∫—Å—É –º–∞—Å—Å–∏–≤–∞
  local index=$((num - 1))

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã–π –Ω–æ–º–µ—Ä
  if (( index < 0 || index >= ${#users[@]} )); then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
    return
  fi

  local user="${users[index]}"

  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  jq "del(.\"$user\")" "$accs_db" > "${accs_db}.tmp" && mv "${accs_db}.tmp" "$accs_db"
  echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$user' —É–¥–∞–ª—ë–Ω!"
	
		# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torrserver.config
  web_port=$(cat /opt/torrserver/port.conf 2>/dev/null)
		
		if [[ -z "$web_port" ]]; then
    web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
  fi

  if [[ -z "$web_port" ]]; then
    web_port="8090"
  fi
		
		[[ ! -f "$accs_db" ]] && { echo "‚ùå –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."; return; }
		
		if [[ $(jq 'length' "$accs_db") -gt 0 ]]; then
    cat << EOF |  tee /opt/torrserver/torrserver.config >/dev/null
DAEMON_OPTIONS="--port $web_port --path /opt/torrserver --httpauth"
EOF
  else
    cat << EOF |  tee /opt/torrserver/torrserver.config >/dev/null
DAEMON_OPTIONS="--port $web_port --path /opt/torrserver"
EOF
    echo "‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞."
  fi
		
		# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ñ–∞–π–ª–∞ accs_db —á—Ç–æ–±—ã torrserver –º–æ–≥ —Å—á–∏—Ç—ã–≤–∞—Ç—å –∏—Ö
		 chown torrserver:torrserver "$accs_db"
		 chmod 644 "$accs_db"

  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
   systemctl restart torrserver
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
list_users() {
  local accs_db="/opt/torrserver/accs.db"

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –∏ –Ω–µ –ø—É—Å—Ç –ª–∏ –æ–Ω
  if [[ ! -f "$accs_db" || "$(jq 'keys | length' "$accs_db")" -eq 0 ]]; then
    echo -e "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
    return
  fi

  # –í—ã–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–∞—Ä–æ–ª–∏ –≤ —Ü–≤–µ—Ç–µ
  jq -r 'to_entries[] | "\u001b[1;34m" + .key + " \u001b[0;37m: \u001b[1;32m" + .value + "\u001b[0m"' "$accs_db"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
disable_auth() {
  local port_file="/opt/torrserver/port.conf"

   rm -f /opt/torrserver/accs.db
		
		# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º torrserver.config
  web_port=$(cat /opt/torrserver/port.conf 2>/dev/null)
		
		if [[ -z "$web_port" ]]; then
    web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
  fi

  if [[ -z "$web_port" ]]; then
    web_port="8090"
  fi
		
		  cat << EOF |  tee /opt/torrserver/torrserver.config >/dev/null
DAEMON_OPTIONS="--port $web_port --path /opt/torrserver"
EOF
    echo "‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞."

  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
   systemctl restart torrserver
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
clear_cache() {
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ TorrServer –≤ systemctl
    if ! systemctl list-units --type=service --all | grep -q "torrserver"; then
        echo "‚ö†Ô∏è  TorrServer –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ —Å–µ—Ä–≤–∏—Å systemd!"
        return 1
    fi
    
  echo ""
  echo " –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ TorrServer..."

  if [[ -d /opt/torrserver/cache ]]; then
    find /opt/torrserver/cache -type f -delete
    echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω."
  else
    echo "‚ö†Ô∏è –ü–∞–ø–∫–∞ /opt/torrserver/cache –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
show_server_address() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ TorrServer –≤ systemctl
    if ! systemctl list-units --type=service --all | grep -q "torrserver"; then
        echo "‚ö†Ô∏è  TorrServer –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ —Å–µ—Ä–≤–∏—Å systemd!"
        return 1
    fi

    web_port=$(cat /opt/torrserver/port.conf 2>/dev/null)

    if [[ -z "$web_port" ]]; then
        web_port=$(grep -oP '(?<=--port )\d+' /opt/torrserver/torrserver.config 2>/dev/null)
    fi

    if [[ -z "$web_port" ]]; then
        web_port="8090"
    fi

    echo ""
    echo "üåç –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: http://$(curl -s ifconfig.me):$web_port"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
  echo ""
  echo " –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
  echo "1Ô∏è‚É£  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TorrServer"
  echo "2Ô∏è‚É£  –£–¥–∞–ª–µ–Ω–∏–µ TorrServer"
  echo "3Ô∏è‚É£  –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
  echo "4Ô∏è‚É£  –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞"
  echo "5Ô∏è‚É£  –ü–æ–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞"
  echo "0Ô∏è‚É£  –í—ã—Ö–æ–¥"
  echo "=============================="
  read -p " –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (0-4): " choice

  case $choice in
    1) install_torrserver ;;
    2) uninstall_torrserver ;;
    3) manage_auth ;;
    4) clear_cache ;;
    5) show_server_address ;;
    0) echo " –í—ã—Ö–æ–¥."; exit ;;
    *) echo "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." ;;
  esac
done
